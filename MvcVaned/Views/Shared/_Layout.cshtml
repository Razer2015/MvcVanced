<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="robots" content="noindex,nofollow">
    <title>@ViewBag.Title - YouTube Vanced</title>
    <meta name="description" content="Vanced is a well known modded version of YouTube with many features, adblocking, background playback and PiP to name a few." />
    <meta name="keywords" content="YouTube,Vanced,Background Playback, PiP" />
    <meta name="author" content="Vanced Team">
    <meta property="og:image" content="@Url.Content("~/Content/Favicon/android-icon-192x192.png")">
    @{
        var downloadType = Request.Params["type"];
        var activeTheme = 0;
        if (Request.Cookies["theme"] != null) {
            if (int.TryParse(Request.Cookies["theme"].Value, out var result)) {
                activeTheme = result;
            }
        }
        if (activeTheme == 1) {
            @Styles.Render("~/Content/css/cyborg")
        }
        else if (activeTheme == 2) {
            @Styles.Render("~/Content/css/darkly")
        }
        else if (activeTheme == 3) {
            @Styles.Render("~/Content/css/flatly")
        }
        else {
            @Styles.Render("~/Content/css/slate")
        }
    }
    @*@Styles.Render("~/Content/css")*@
    @Scripts.Render("~/bundles/modernizr")
    <link rel="apple-touch-icon" sizes="57x57" href="@Url.Content("~/Content/Favicon/apple-icon-57x57.png")">
    <link rel="apple-touch-icon" sizes="60x60" href="@Url.Content("~/Content/Favicon/apple-icon-60x60.png")">
    <link rel="apple-touch-icon" sizes="72x72" href="@Url.Content("~/Content/Favicon/apple-icon-72x72.png")">
    <link rel="apple-touch-icon" sizes="76x76" href="@Url.Content("~/Content/Favicon/apple-icon-76x76.png")">
    <link rel="apple-touch-icon" sizes="114x114" href="@Url.Content("~/Content/Favicon/apple-icon-114x114.png")">
    <link rel="apple-touch-icon" sizes="120x120" href="@Url.Content("~/Content/Favicon/apple-icon-120x120.png")">
    <link rel="apple-touch-icon" sizes="144x144" href="@Url.Content("~/Content/Favicon/apple-icon-144x144.png")">
    <link rel="apple-touch-icon" sizes="152x152" href="@Url.Content("~/Content/Favicon/apple-icon-152x152.png")">
    <link rel="apple-touch-icon" sizes="180x180" href="@Url.Content("~/Content/Favicon/apple-icon-180x180.png")">
    <link rel="icon" type="image/png" sizes="192x192" href="@Url.Content("~/Content/Favicon/android-icon-192x192.png")">
    <link rel="icon" type="image/png" sizes="32x32" href="@Url.Content("~/Content/Favicon/favicon-32x32.png")">
    <link rel="icon" type="image/png" sizes="96x96" href="@Url.Content("~/Content/Favicon/favicon-96x96.png")">
    <link rel="icon" type="image/png" sizes="16x16" href="@Url.Content("~/Content/Favicon/favicon-16x16.png")">
    <link rel="manifest" href="@Url.Content("~/Content/Favicon/manifest.json")">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="@Url.Content("~/Content/Favicon/ms-icon-144x144.png")">
    <meta name="theme-color" content="#ffffff">
    <script type='text/javascript'>
        var appInsights = window.appInsights || function (config) {
            function r(config) { t[config] = function () { var i = arguments; t.queue.push(function () { t[config].apply(t, i) }) } }
            var t = { config: config }, u = document, e = window, o = 'script', s = u.createElement(o), i, f; for (s.src = config.url || '//az416426.vo.msecnd.net/scripts/a/ai.0.js', u.getElementsByTagName(o)[0].parentNode.appendChild(s), t.cookie = u.cookie, t.queue = [], i = ['Event', 'Exception', 'Metric', 'PageView', 'Trace', 'Ajax']; i.length;)r('track' + i.pop()); return r('setAuthenticatedUserContext'), r('clearAuthenticatedUserContext'), config.disableExceptionTracking || (i = 'onerror', r('_' + i), f = e[i], e[i] = function (config, r, u, e, o) { var s = f && f(config, r, u, e, o); return s !== !0 && t['_' + i](config, r, u, e, o), s }), t
        }({
            instrumentationKey: 'be92472e-6532-46aa-8df7-4c826beb97ca'
        });

        window.appInsights = appInsights;
        appInsights.trackPageView();
    </script>
    <script>
        // https://stackoverflow.com/a/5968306
        function getCookie(name) {
            var dc = document.cookie;
            var prefix = name + "=";
            var begin = dc.indexOf("; " + prefix);
            if (begin == -1) {
                begin = dc.indexOf(prefix);
                if (begin != 0) return null;
            }
            else {
                begin += 2;
                var end = document.cookie.indexOf(";", begin);
                if (end == -1) {
                    end = dc.length;
                }
            }
            return decodeURI(dc.substring(begin + prefix.length, end));
        }

        var jsCookie = getCookie("js");
        if (jsCookie == null) {
            document.cookie = "js=1; path=/";
            location.reload(true);
        }
    </script>
</head>
<body>
    @* Original
            <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @Html.ActionLink("YouTube Vanced", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>
                        <li>@Html.ActionLink("About", "About", "Home")</li>
                        <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    </ul>
                </div>
            </div>
        </div>*@

    <div class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            @*@Html.ActionLink("YouTube Vanced", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })*@
            <a href="@Url.Action("Index", "Home")" class="navbar-brand">
                <img src="@Url.Content("~/Content/Images/vanced-32x32.png")" title="YouTube Vanced" alt="youtube vanced" />
                YouTube Vanced
            </a>
            <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="nav navbar-nav">
                    <li class="nav-item">@Html.ActionLink("Home", "Index", "Home", null, new { @class = "nav-link" })</li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Downloads</a>
                        <div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 37px, 0px); top: 0px; left: 0px; will-change: transform;">
                            <a>@Html.ActionLink("Non-Root", "Index", "APKs", new { type = APKTYPE.NONROOT }, new { @class = $"{((downloadType == "NONROOT") ? "dropdown-item active" : "dropdown-item")}" })</a>
                            <a>@Html.ActionLink("Root", "Index", "APKs", new { type = APKTYPE.ROOT }, new { @class = $"{((downloadType == "ROOT") ? "dropdown-item active" : "dropdown-item")}" })</a>
                            <a>@Html.ActionLink("Magisk", "Index", "APKs", new { type = APKTYPE.MAGISK }, new { @class = $"{((downloadType == "MAGISK") ? "dropdown-item active" : "dropdown-item")}" })</a>
                        </div>
                    </li>
                    @*<li class="nav-item">@Html.ActionLink("Downloads", "Index", "Download", null, new { @class = "nav-link" })</li>*@
                    @*<li class="nav-item">@Html.ActionLink("About", "About", "Home", null, new { @class = "nav-link" })</li>*@
                    <li class="nav-item">@Html.ActionLink("Changelogs", "Changelogs", "Home", null, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Contact", "Contact", "Home", null, new { @class = "nav-link" })</li>
                    @if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Manager"))) {
                        <li class="nav-item">@Html.ActionLink("Drive Files", "Index", "Drive", null, new { @class = "nav-link" })</li>
                    }
                    @if (Request.IsAuthenticated && User.IsInRole("Admin")) {
                        <li class="nav-item">@Html.ActionLink("Admin", "Index", "Admin", null, new { @class = "nav-link" })</li>
                        <li class="nav-item">@Html.ActionLink("Users", "Index", "Users", null, new { @class = "nav-link" })</li>
                    }
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Theme</a>
                        <div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 37px, 0px); top: 0px; left: 0px; will-change: transform;">
                            <a>@Html.ActionLink("Slate (Default)", "ChangeTheme", "Theme", new { id = 0, url = @Request.Url }, new { @class = $"{((activeTheme == 0) ? "dropdown-item active" : "dropdown-item")}" })</a>
                            <a>@Html.ActionLink("Cyborg", "ChangeTheme", "Theme", new { id = 1, url = @Request.Url }, new { @class = $"{((activeTheme == 1) ? "dropdown-item active" : "dropdown-item")}" })</a>
                            <a>@Html.ActionLink("Darkly", "ChangeTheme", "Theme", new { id = 2, url = @Request.Url }, new { @class = $"{((activeTheme == 2) ? "dropdown-item active" : "dropdown-item")}" })</a>
                            <a>@Html.ActionLink("Flatly", "ChangeTheme", "Theme", new { id = 3, url = @Request.Url }, new { @class = $"{((activeTheme == 3) ? "dropdown-item active" : "dropdown-item")}" })</a>
                        </div>
                    </li>
                    @* Dropdown example
                            <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" id="download">Slate <span class="caret"></span></a>
                            <div class="dropdown-menu" aria-labelledby="download">
                                <a class="dropdown-item" href="https://jsfiddle.net/bootswatch/g1q7jxzf/">Open in JSFiddle</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="../4/slate/bootstrap.min.css">bootstrap.min.css</a>
                                <a class="dropdown-item" href="../4/slate/bootstrap.css">bootstrap.css</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="../4/slate/_variables.scss">_variables.scss</a>
                                <a class="dropdown-item" href="../4/slate/_bootswatch.scss">_bootswatch.scss</a>
                            </div>
                        </li>*@
                </ul>
            </div>
            @Html.Partial("_LoginPartial")
        </div>
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - YouTube Vanced</p>
            <p>Site coded by xfileFIN<br />File and Database hosting by KevinX8</p>
        </footer>
    </div>


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Content/datatable")
    @Scripts.Render("~/Content/datatable_bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
