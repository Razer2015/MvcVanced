@model IEnumerable<MvcVanced.Models.APK>

@{
    var apkType = (APKTYPE)ViewBag.Type;
    var dlStyle = (DLTYPE)(ViewBag.Style);
    List<MvcVanced.Models.APK> publics = null;
    List<MvcVanced.Models.APK> betas = null;
    var permission = Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Tester"));
    switch (apkType) {
        case APKTYPE.NONROOT:
            ViewBag.Title = "Non-Root";
            publics = Model.Where(x => (x.Type == APKTYPE.NONROOT)).ToList();
            betas = Model.Where(x => (x.Type == APKTYPE.NONROOT_BETA)).ToList();
            break;
        case APKTYPE.ROOT:
            ViewBag.Title = "Rooted";
            publics = Model.Where(x => (x.Type == APKTYPE.ROOT)).ToList();
            betas = Model.Where(x => (x.Type == APKTYPE.ROOT_BETA)).ToList();
            break;
        case APKTYPE.MAGISK:
            ViewBag.Title = "Magisk";
            publics = Model.Where(x => (x.Type == APKTYPE.MAGISK)).ToList();
            betas = Model.Where(x => (x.Type == APKTYPE.MAGISK_BETA)).ToList();
            break;
    }
    if (!permission || User.IsInRole("Tester")) {
        publics = publics.Where(x => x.Public == true).ToList();
        betas = betas.Where(x => x.Public == true).ToList();
    }
}

<div class="jumbotron">
    <h1>Downloads</h1>
    <p class="lead">The official downloads of YouTube Vanced</p>
</div>

@if (Request.IsAuthenticated && User.IsInRole("Admin")) {
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@{
    if (ViewBag.Title == "Rooted") {
        <h2>Installer files</h2>
        <p><a class="btn btn-warning" href="https://drive.google.com/drive/folders/1x67EYgPeLLSVzRfZyeLRCeWmbF-fUggd?usp=sharing">Download »</a></p>
    }
    if (ViewBag.MicroG != null) {
        <div class="col-lg-12">
            <div class="bs-component">
                <div class="alert alert-warning">
                    <h4 class="alert-heading">Install MicroG!</h4>
                    <p class="mb-0">You need to install MicroG to login. Without it, <strong>add account</strong> button won't do anything.</p>
                </div>
            </div>
        </div>
        <h2>MicroG download</h2>
        <div class="microg">
            @Html.Partial("_Entries", (List<MvcVanced.Models.APK>)ViewBag.MicroG, new ViewDataDictionary { { "id", "microg" }, { "style", dlStyle } })
        </div>
    }
}

<h2>@ViewBag.Title downloads</h2>
<div class="public">
    @Html.Partial("_Entries", publics, new ViewDataDictionary { { "id", "public" }, { "style", dlStyle } })
</div>

@if (dlStyle != DLTYPE.BASIC) {
    <div class="card text-white bg-dark mb-3" style="max-width: 20rem;">
        <div class="card-body">
            <h4 class="card-title">Trouble downloading?</h4>
            <p class="card-text">@Html.ActionLink("Try the basic version here.", "Index", "APKs", new { type = apkType, style = DLTYPE.BASIC }, null)</p>
        </div>
    </div>
}

@{
    if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Tester"))) {
        if (betas != null) {
            <h2>@ViewBag.Title beta downloads</h2>
            <div class="beta">
                @Html.Partial("_Entries", betas, new ViewDataDictionary { { "id", "beta" }, { "style", dlStyle } })
            </div>
        }
    }
}

@section scripts {
    <script>
        //$("#button-id").click(function () {
        $("table").on('click', '#button-id', function (evt) {
            var url = $(this).data("url");
            var $this = $(this).find("label");
            if (!$this.hasClass('active')) {
                $this.text("Public");
            }
            else {
                $this.text("Offline");
            }
            $.get(url, function (result) {
                //do something with the result if you ever need to

            });
        });
        $(function () {
            $("#public").dataTable({
                "iDisplayLength": 5,
                "aLengthMenu": [[5, 10, 15, 20, -1], [5, 10, 15, 20, "All"]],
                //"columnDefs": [
                //    { "orderData": [1], "targets": 1 }
                //    //{ "orderData": 3, "targets": 1 }
                //]
                "order": [[1, "desc"]]
            });
        });
    </script>
}